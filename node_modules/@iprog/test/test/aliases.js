const views= ["summaryView", "sidebarView", "suspenseView", "searchFormView", "searchResultsView", "detailsView"];

export function getAliases(dummyDir){
    function paths(x, relative="./", end="", absolute=true){
	return [relative+x, relative+x+".js"+end,   relative+x+".ts"+end].concat(
	    absolute?["/src/"+x, "/src/"+x+".js"+end,   "/src/"+x+".ts"+end]:[])
	    .map(path=>({[path]:dummyDir+x.substring(x.lastIndexOf("/")+1)+".js"}));
    }

    function viewPaths(){
	return views.map(v=>paths("views/"+v, "../", "x"))
	    .reduce((acc,arr)=> [...acc, ...arr], []);  // array merge
    }
	
    
    return   {
	alias:[...paths("teacherFetch"),     // teacherFetch mapped to empty file
	       ...viewPaths(),              // /src/view/* mapped to empty files (used also by native presenters)
	       ...views.map(x=> ({["/src/web-views/"+x]:"/src/views/"+x})),    // web views can be found under the virtual path /src/web-views
	].reduce((acc, x)=>({ ...acc, ...x}), {})  // object merge
    }	   ;
}
