import{expect} from "vitest";

export function customEventWrap(component){
    const ret= function (props){
	return component(new Proxy(props, {
	    get(target, p){
		if(target.hasOwnProperty(p))
		    return target[p];
		return function(...params){
		    const customEvent = { name: p, params };
            ret._customEventQueue.push(customEvent);
		};
	    }
	}));
    };

	ret._customEventQueue = [];

    ret.popCustomEvent=function(descr=""){
	const customEvent = ret._customEventQueue.shift();
	expect(customEvent?.name, "expected a callback prop to be accessed "+descr).toBeTruthy();
	expect(basicEventNames).not.include(customEvent.name.toLowerCase());
	expect(customEvent.params, "expected custom event to be fired "+descr).toBeTruthy();
	const result= {...customEvent};
	return result;
    };
    
  ret.popLastCustomEvent = function (descr = "") {
    const customEvent = ret._customEventQueue.pop();
    expect(customEvent?.name, "Expected a callback to be fired " + descr).toBeTruthy();
    expect(customEvent?.params, "Expected callback to receive arguments " + descr).toBeTruthy();
    const result= {...customEvent};
	return result;
  };

  ret.peekAllCustomEvents = function () {
    return [...ret._customEventQueue];
  };

  ret.clearCustomEvents = function () {
    ret._customEventQueue.length = 0;
  };
    return ret;
}

const basicEventNames = ["onabort", "onafterprint", "onbeforeprint", "onbeforeunload", "onblur", "oncanplay", "oncanplaythrough", "onchange", "onclick", "oncontextmenu", "oncopy", "oncut", "ondblclick", "ondrag", "ondragend", "ondragenter", "ondragleave", "ondragover", "ondragstart", "ondrop", "ondurationchange", "onemptied", "onended", "onerror", "onfocus", "onhashchange", "oninput", "oninvalid", "onkeydown", "onkeypress", "onkeyup", "onload", "onloadeddata", "onloadedmetadata", "onloadstart", "onmessage", "onmousedown", "onmouseenter", "onmouseleave", "onmousemove", "onmouseout", "onmouseover", "onmouseup", "onmousewheel", "onoffline", "ononline", "onpagehide", "onpageshow", "onpaste", "onpause", "onplay", "onplaying", "onpopstate", "onprogress", "onratechange", "onresize", "onscroll", "onsearch", "onseeked", "onseeking", "onselect", "onshow", "onstalled", "onstorage", "onsubmit", "onsuspend", "ontimeupdate", "ontoggle", "onunload", "onvolumechange", "onwaiting", "onwheel",

			  // native event names
			 "onpress", "onvaluechange", "onchangetext", "onsubmitediting"];
