import {describe, it, expect} from "vitest";
import { menuPrice } from "/src/utilities";

const oldReduce= Array.prototype.reduce;
const reduceHistory=[];
Array.prototype.reduce=function(x, y){
    reduceHistory.push(x);
    return oldReduce.bind(this)(x, y);
};

import {checkArrayCB} from "./checkCB";

describe("TW1.1.5 reduce(CB, acc) exercise: menuPrice", function tw1_1_5() {
  it("should sum up dish prices", function tw1_1_5_1() {
    const dishes = [
	{    id: 100,    title: "Meat balls",    dishTypes: ["lunch", "dinner", "main course", "main dish"],    pricePerServing: 82.41,  },
	{    id: 201,    title: "Vanilla Ice cream",    pricePerServing: 15.22,    dishTypes: ["dessert", "breakfast", "brunch"],  },
	{    id: 3,    title: "Baked Brie with Peaches",    dishTypes: ["snack", "starter"],    pricePerServing: 10.81,  },
	{    id: 202,    title: "Strawberry ice cream",    pricePerServing: 14.29,  },
    ];

      reduceHistory.length=0;
      expect(menuPrice(dishes)).toBe(82.41+ 15.22+ 10.81 + 14.29);
      const reduceParam= reduceHistory.pop();
      checkArrayCB(reduceParam, "reduce", "calculating menu price");
  });

  it("for empty menu, should return 0", function tw1_1_5_2() {
      const dishes= [];
      expect(menuPrice(dishes)).toBe(0);
  });
});
