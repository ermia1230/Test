import {vi, describe, expect, it} from "vitest";
import {createElement} from "react";
import { getProps} from "./webJsxMock";
import {getModule} from "./getModule";
import { render, screen, fireEvent, cleanup} from "@testing-library/react";
import {customEventWrap} from "./customEventWrap";

import { SummaryView} from "/src/web-views/summaryView";

// re-run these tests if any of these web views changes
import.meta.glob("/src/views/sidebarView.*sx")
import.meta.glob("/src/views/detailsView.*sx")
import.meta.glob("/src/views/searchFormView.*sx")
import.meta.glob("/src/views/searchResultsView.*sx")

const { SidebarView }= await getModule("/src/web-views/sidebarView");
const { DetailsView }= await getModule("/src/web-views/detailsView");
const { SearchFormView }= await getModule("/src/web-views/searchFormView");
const { SearchResultsView }= await getModule("/src/web-views/searchResultsView");

const searchResults=[
    {
      id: 1,
      title: "Spaghetti Carbonara",
      image: "https://example.com/carbonara.jpg",
      sourceUrl: "https://example.com/recipe1",
    },
];

const dishes=[
    {  id: 2,  title: "Sourdough Starter",  pricePerServing: 11.22,  dishTypes: ["starter", "appetizer"],  summary: "Here is how you make it... Lore ipsum...", extendedIngredients:[]}
];

let enable= false;
try{
    enable= render(createElement(SummaryView, {ingredients:[], people:1})).getByRole("button");
}catch(e){}
cleanup();

describe.runIf(enable)("TW 3.3.2 navigation buttons", function(){
    it("SummaryView has a button leading to Search", function() {
	
	render(createElement(SummaryView,
			     { ingredients:[],
			       people:3
			     }));
	       
	const button = screen.getByRole("button");
	fireEvent.click(button);
	
	expect(window.location.hash).toBe("#/search");
    });
    
    it.runIf(DetailsView)("DetailsView dish adding button should lead to 'sidebar' (home)", function() {
	
	render(createElement(customEventWrap(DetailsView),
			     { dishData: dishes[0],
			       guests:3,
			       isDishInMenu:false
			     }));

	const addButton = screen.getByText("Add to menu");
	fireEvent.click(addButton);

	expect(window.location.hash).toBe("#/search");
    });

    
    it.runIf(SidebarView)("SidebarView dish row press should open dish details", function(){
	render(createElement(customEventWrap(SidebarView),
			     {
				 number:4,
				 dishes
			     }));
				 

	const link= screen.getByRole("link");

	fireEvent.click(link);
	expect(window.location.hash).toBe("#/details");

    });

    it.runIf(SearchResultsView)("SearchResultsView dish press should lead to details", function(){
	const output= render(createElement(customEventWrap(SearchResultsView),
			     {
				 searchResults
			     }));
	fireEvent.click(output.container.children[0]  // DIV
			.children[0] // SPAN
		       );
	expect(window.location.hash).toBe("#/details");
    });

    it.runIf(SearchFormView)("SearchFormView button click leads to Summary", function(){
	render(createElement(customEventWrap(SearchFormView),
			     { dishTypeOptions:[], text:"", type:""}));

	const summaryButton=screen.getByRole("button", {name: /summary/i});

	fireEvent.click(summaryButton);
	expect(window.location.hash).toBe("#/summary");
    });
});
