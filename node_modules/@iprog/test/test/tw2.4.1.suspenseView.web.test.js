import {describe, vi, it, expect} from "vitest";

// re-run these tests if anything happens to the web suspenseView
import.meta.glob("/src/views/suspenseView.*sx")

import {getModule} from "./getModule";
const {SuspenseView, noSuspenseView} =await getModule("/src/web-views/suspenseView");;

import {render} from "@testing-library/react";
import {createElement} from "react";
import {getProps} from "./webJsxMock";

describe.skipIf(noSuspenseView)("TW2.4.1 conditional rendering: SuspenseView", function tw2_4_1() {
    it.for([
	{
	    expected:{text:"no data",img:false},
	    name:"\"no data\" if no promise"
	},
	{
	    promise:"dummyPromise", error: new Error("big mistake"),
	    name: "error mesasge if promise and error",
	    expected:{text:"Error: big mistake",img:false}
	},
	{
	    promise:"dummyPromise 1",
	    name:"suspense image if promise but no data or error",
	    expected:{img:true, text:""}
	}
    ])
    ("$name", function tw2_4_1_1(p){
	const{expected, name,...props}=p;
	const output= render(createElement(SuspenseView, props));
	expect(output.container.innerText).toBe(expected.text);
	expect(!!output.queryByRole("img")).toBe(expected.img);
    });
});
